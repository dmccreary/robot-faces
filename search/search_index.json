{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Robot Faces This guide will help you learn how to draw fun faces on your robots.","title":"Home"},{"location":"#welcome-to-robot-faces","text":"This guide will help you learn how to draw fun faces on your robots.","title":"Welcome to Robot Faces"},{"location":"about/","text":"About The Robot Faces Book The book is designed to be a fun way to teach concepts in computational thinking. It was designed to use low-cost parts to keep robot kits as low as possible. Most classrooms can create projects for under $30. Primary Goals Create hands-on lessons that are fun for students Teach fundamentals such as abstractions, functions and modularity","title":"About The Robot Faces Book"},{"location":"about/#about-the-robot-faces-book","text":"The book is designed to be a fun way to teach concepts in computational thinking. It was designed to use low-cost parts to keep robot kits as low as possible. Most classrooms can create projects for under $30.","title":"About The Robot Faces Book"},{"location":"about/#primary-goals","text":"Create hands-on lessons that are fun for students Teach fundamentals such as abstractions, functions and modularity","title":"Primary Goals"},{"location":"contact/","text":"Contact Dan McCreary","title":"Contact"},{"location":"contact/#contact","text":"Dan McCreary","title":"Contact"},{"location":"getting-started/","text":"Getting Started with Robot Faces Getting Hardware Installing Software Drawing Your Fist Face","title":"Getting Started with Robot Faces"},{"location":"getting-started/#getting-started-with-robot-faces","text":"","title":"Getting Started with Robot Faces"},{"location":"getting-started/#getting-hardware","text":"","title":"Getting Hardware"},{"location":"getting-started/#installing-software","text":"","title":"Installing Software"},{"location":"getting-started/#drawing-your-fist-face","text":"","title":"Drawing Your Fist Face"},{"location":"glossary/","text":"Robot Faces Glossary of Terms Blit Block transfer Ellipse RP2040","title":"Glossary"},{"location":"glossary/#robot-faces-glossary-of-terms","text":"","title":"Robot Faces Glossary of Terms"},{"location":"glossary/#blit","text":"Block transfer","title":"Blit"},{"location":"glossary/#ellipse","text":"","title":"Ellipse"},{"location":"glossary/#rp2040","text":"","title":"RP2040"},{"location":"parts-lists/","text":"Robot Faces Parts List Microcontrollers Raspberry Pi Pico Cytron Maker Pi RP2040 Displays 128X64 OLEDs Robot Chassis Sensors This course is not intended to be a complete guide to sensors, but here are a few favorite sensors our students like to use. Momentary Push Buttons Potentiometers Rotary Encoders","title":"Robot Faces Parts List"},{"location":"parts-lists/#robot-faces-parts-list","text":"","title":"Robot Faces Parts List"},{"location":"parts-lists/#microcontrollers","text":"","title":"Microcontrollers"},{"location":"parts-lists/#raspberry-pi-pico","text":"","title":"Raspberry Pi Pico"},{"location":"parts-lists/#cytron-maker-pi-rp2040","text":"","title":"Cytron Maker Pi RP2040"},{"location":"parts-lists/#displays","text":"","title":"Displays"},{"location":"parts-lists/#128x64-oleds","text":"","title":"128X64 OLEDs"},{"location":"parts-lists/#robot-chassis","text":"","title":"Robot Chassis"},{"location":"parts-lists/#sensors","text":"This course is not intended to be a complete guide to sensors, but here are a few favorite sensors our students like to use.","title":"Sensors"},{"location":"parts-lists/#momentary-push-buttons","text":"","title":"Momentary Push Buttons"},{"location":"parts-lists/#potentiometers","text":"","title":"Potentiometers"},{"location":"parts-lists/#rotary-encoders","text":"","title":"Rotary Encoders"},{"location":"lessons/","text":"List of Lessons","title":"Introduction"},{"location":"lessons/#list-of-lessons","text":"","title":"List of Lessons"},{"location":"lessons/basic-face-layouts/","text":"Basic Face Layouts Eyes Mouth Eyebrows","title":"Basic Face Layouts"},{"location":"lessons/basic-face-layouts/#basic-face-layouts","text":"","title":"Basic Face Layouts"},{"location":"lessons/basic-face-layouts/#eyes","text":"","title":"Eyes"},{"location":"lessons/basic-face-layouts/#mouth","text":"","title":"Mouth"},{"location":"lessons/basic-face-layouts/#eyebrows","text":"","title":"Eyebrows"},{"location":"lessons/blit-commands/","text":"","title":"Blit commands"},{"location":"lessons/drawing-commands/","text":"Drawing Commands Rectangles Lines Circles Polygons","title":"Drawing Commands"},{"location":"lessons/drawing-commands/#drawing-commands","text":"","title":"Drawing Commands"},{"location":"lessons/drawing-commands/#rectangles","text":"","title":"Rectangles"},{"location":"lessons/drawing-commands/#lines","text":"","title":"Lines"},{"location":"lessons/drawing-commands/#circles","text":"","title":"Circles"},{"location":"lessons/drawing-commands/#polygons","text":"","title":"Polygons"},{"location":"lessons/eye-scanner/","text":"Eye Scanner 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 from machine import Pin from utime import sleep , ticks_us from math import sqrt import framebuf import ssd1306 WIDTH = 128 # bit shifting only works when the numbers are a power of 2 HALF_WIDTH = WIDTH >> 1 QUARTER_WIDTH = HALF_WIDTH >> 1 HEIGHT = 64 HALF_HEIGHT = HEIGHT >> 1 QUARTER_HEIGHT = HALF_HEIGHT >> 1 ONE_THIRD_HEIGHT = int ( HEIGHT / 3 ) # draw readability ON = 1 OFF = 0 NO_FILL = 0 FILL = 1 clock = Pin ( 2 ) #SCL data = Pin ( 3 ) #SDA RES = machine . Pin ( 4 ) DC = machine . Pin ( 5 ) CS = machine . Pin ( 6 ) spi = machine . SPI ( 0 , sck = clock , mosi = data ) oled = ssd1306 . SSD1306_SPI ( WIDTH , HEIGHT , spi , DC , RES , CS ) phm = 18 # pupal horizontal movement range eye_dist_from_top = 21 eyeWidth = 27 eyeHeight = 10 mouth_vpos = 45 mouth_width = 40 def draw_face ( eye_direction ): oled . fill ( 0 ) # left eye oled . ellipse ( 32 , eye_dist_from_top , eyeWidth , eyeHeight , ON , FILL ) oled . ellipse ( 32 + i , eye_dist_from_top , 5 , 5 , OFF , FILL ) # right eye oled . ellipse ( 94 , eye_dist_from_top , eyeWidth , eyeHeight , ON , FILL ) oled . ellipse ( 94 + i , eye_dist_from_top , 5 , 5 , OFF , FILL ) # draw mouth # draw bottom half by doing a bitwise and of 8 and 4 oled . ellipse ( HALF_WIDTH , mouth_vpos , mouth_width , 10 , ON , NO_FILL , 12 ) oled . show () delay = .02 while True : for i in range ( - phm , phm ): draw_face ( i ) sleep ( delay ) for i in range ( phm , - phm , - 1 ): draw_face ( i ) sleep ( delay )","title":"Eye Scanner"},{"location":"lessons/eye-scanner/#eye-scanner","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 from machine import Pin from utime import sleep , ticks_us from math import sqrt import framebuf import ssd1306 WIDTH = 128 # bit shifting only works when the numbers are a power of 2 HALF_WIDTH = WIDTH >> 1 QUARTER_WIDTH = HALF_WIDTH >> 1 HEIGHT = 64 HALF_HEIGHT = HEIGHT >> 1 QUARTER_HEIGHT = HALF_HEIGHT >> 1 ONE_THIRD_HEIGHT = int ( HEIGHT / 3 ) # draw readability ON = 1 OFF = 0 NO_FILL = 0 FILL = 1 clock = Pin ( 2 ) #SCL data = Pin ( 3 ) #SDA RES = machine . Pin ( 4 ) DC = machine . Pin ( 5 ) CS = machine . Pin ( 6 ) spi = machine . SPI ( 0 , sck = clock , mosi = data ) oled = ssd1306 . SSD1306_SPI ( WIDTH , HEIGHT , spi , DC , RES , CS ) phm = 18 # pupal horizontal movement range eye_dist_from_top = 21 eyeWidth = 27 eyeHeight = 10 mouth_vpos = 45 mouth_width = 40 def draw_face ( eye_direction ): oled . fill ( 0 ) # left eye oled . ellipse ( 32 , eye_dist_from_top , eyeWidth , eyeHeight , ON , FILL ) oled . ellipse ( 32 + i , eye_dist_from_top , 5 , 5 , OFF , FILL ) # right eye oled . ellipse ( 94 , eye_dist_from_top , eyeWidth , eyeHeight , ON , FILL ) oled . ellipse ( 94 + i , eye_dist_from_top , 5 , 5 , OFF , FILL ) # draw mouth # draw bottom half by doing a bitwise and of 8 and 4 oled . ellipse ( HALF_WIDTH , mouth_vpos , mouth_width , 10 , ON , NO_FILL , 12 ) oled . show () delay = .02 while True : for i in range ( - phm , phm ): draw_face ( i ) sleep ( delay ) for i in range ( phm , - phm , - 1 ): draw_face ( i ) sleep ( delay )","title":"Eye Scanner"},{"location":"lessons/interactions/","text":"Interactions Eye Pupal Movement Blinking","title":"Interactions"},{"location":"lessons/interactions/#interactions","text":"","title":"Interactions"},{"location":"lessons/interactions/#eye-pupal-movement","text":"","title":"Eye Pupal Movement"},{"location":"lessons/interactions/#blinking","text":"","title":"Blinking"},{"location":"lessons/multiple-threads/","text":"Multiple Threads Microcontrollers have more than one core. We can delegate face updates to a second core.","title":"Multiple Threads"},{"location":"lessons/multiple-threads/#multiple-threads","text":"Microcontrollers have more than one core. We can delegate face updates to a second core.","title":"Multiple Threads"},{"location":"lessons/screen-coodinates/","text":"Screen Coordinates","title":"Screen Coordinates"},{"location":"lessons/screen-coodinates/#screen-coordinates","text":"","title":"Screen Coordinates"}]}